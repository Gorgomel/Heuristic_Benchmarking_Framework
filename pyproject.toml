[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

# =========================== Metadados (PEP 621) ===========================
[project]
name = "hpc-framework"
version = "0.8.0"
description = "Framework for Heuristic Performance Characterization"
readme = "README.md"
requires-python = ">=3.11,<4.0"
license = { text = "MIT" }
authors = [{ name = "Brunno Sink", email = "brunnosink2@gmail.com" }]

# Dependências de RUNTIME (PEP 621)
dependencies = [
  "numpy>=2.3.1,<3.0.0",
  "pandas>=2.2,<3.0",
  "scipy>=1.16.0,<2.0.0",
  "jsonschema>=4.25.0,<5.0.0",
  "fabric>=3.2.2,<4.0.0",
  "networkx>=3.2,<4.0",           # <- AGORA É DEP PRINCIPAL (testes precisam)
  "tqdm (>=4.66,<5.0)",
]

# Extras/optionals (instale com: poetry install -E metrics)
[project.optional-dependencies]
metrics = [
  "tqdm>=4.67.1,<5.0.0",
]

# Console scripts
[project.scripts]
instance-generator = "generator.cli:main"
hpc-framework      = "hpc_framework.cli:main"

# ======================== Config Poetry (pacotes src/) =====================
[tool.poetry]
packages = [
  { include = "generator",     from = "src" },
  { include = "heuristics",    from = "src" },
  { include = "hpc_framework", from = "src" },
  { include = "orchestrator",  from = "src" },
]

# Dev / ferramentas
[tool.poetry.group.dev.dependencies]
pytest              = "^8.4.2"
pytest-cov          = "^5.0.0"
coverage            = { version = "^7.10.6", extras = ["toml"] }
ruff                = "^0.6.9"
black               = "^24.10.0"
mypy                = "^1.17.1"
interrogate         = "^1.7.0"
mkdocs              = "^1.6.1"
mkdocs-material     = "^9.5.49"
mkdocstrings        = { version = "^0.30.0" }
mkdocstrings-python = { version = "^1.8.2" }
griffe              = "^1.5.4"
pre-commit          = "^3.8.0"
mkdocs-minify-plugin = "^0.8.0"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.6.1"
mkdocs-material = "^9.6.19"
mkdocstrings = { extras = ["python"], version = "^0.30.0" }
mkdocs-autorefs = "^1.4.3"
mkdocs-minify-plugin = "^0.8.0"

# ================================ Ruff =====================================
[tool.ruff]
line-length = 100
target-version = "py311"
extend-exclude = [
  "dist", "build", ".venv", "env",
  "KaHIP/misc/pymodule/callkahipfrompython.py",
]

[tool.ruff.lint]
select = ["E","F","I","D","B","UP","C4","SIM"]
ignore = ["E501","D200","D202","D203","D205","D211","D213","D401","D103"]

[tool.ruff.lint.isort]
known-first-party = ["hpc_framework","generator","heuristics","orchestrator"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["D100","D101","D102","D103","D104"]
"src/orchestrator/**.py" = ["D100"]
"tests/test_results_schema.py" = ["E402"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

# ================================ Black ====================================
[tool.black]
line-length = 100
target-version = ["py311"]
exclude = "dist|build|\\.venv|env"

# ================================= mypy ====================================
[tool.mypy]
python_version = "3.11"
mypy_path = "src"
explicit_package_bases = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
no_implicit_optional = true
show_error_codes = true
pretty = true

# ================================ pytest ===================================
[tool.pytest.ini_options]
addopts = "-q"
testpaths = ["tests"]
filterwarnings = ["ignore::DeprecationWarning"]
markers = [
  "smoke: testes rápidos que exercitam integração com solvers externos e persistem artefatos mínimos"
]

# =============================== coverage ==================================
[tool.coverage.run]
branch = true
source = ["src"]
omit = [
  "**/__init__.py",
  "src/orchestrator/*",
  "src/orchestrator/**",
]

[tool.coverage.report]
fail_under = 75
show_missing = true
skip_covered = false

# ============================== interrogate ================================
[tool.interrogate]
paths = ["src"]
ignore-init-method = true
ignore-init-module = true
ignore-module = false
fail-under = 60
exclude = ["tests", "dist", "build", ".venv", "env"]
