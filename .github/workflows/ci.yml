---
name: CI

'on':
  push:
    branches: [main, dev]
    paths-ignore: [site/**]
  pull_request:
    branches: [main, dev]
    paths-ignore: [site/**]
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: "3.11"
  POETRY_VERSION: "1.8.3"

jobs:
  qa:
    name: qa
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VERSION }}
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Cache Poetry env
        uses: actions/cache@v4
        with:
          path: |
            .venv
            ~/.cache/pip
            ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}-qa # yamllint disable-line rule:line-length

      - name: Poetry check
        run: |
          poetry --version
          poetry check

      - name: Install deps
        run: |
          poetry env use "${{ env.PYTHON_VERSION }}"
          poetry install --with dev -E metrics --no-interaction
          poetry run python -V
          poetry show --tree

      - name: Install METIS (for smoke tests that call gpmetis)
        run: |
          sudo apt-get update
          sudo apt-get install -y metis
          gpmetis -h | head -n1 || true

      - name: QA suite (pre-commit + quick smoke)
        env:
          OMP_NUM_THREADS: "1"
          OPENBLAS_NUM_THREADS: "1"
          MKL_NUM_THREADS: "1"
        run: |
          poetry run pre-commit run -a
          poetry run python - <<'PY'
          import importlib
          importlib.import_module("generator.cli")
          importlib.import_module("hpc_framework.cli")
          importlib.import_module("orchestrator.ssh_executor")
          PY
          poetry run pytest -q -m smoke

  docs:
    name: docs
    needs: qa
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VERSION }}
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Cache Poetry env
        uses: actions/cache@v4
        with:
          path: |
            .venv
            ~/.cache/pip
            ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}-docs # yamllint disable-line rule:line-length

      - name: Install deps
        run: poetry install --with dev -E metrics --no-interaction

      - name: Build docs (strict)
        run: poetry run mkdocs build --strict

  smoke:
    name: smoke
    needs: qa
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VERSION }}
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Cache Poetry env
        uses: actions/cache@v4
        with:
          path: |
            .venv
            ~/.cache/pip
            ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}-smoke # yamllint disable-line rule:line-length

      - name: Install deps
        run: poetry install --with dev -E metrics --no-interaction

      - name: Install METIS (for gpmetis smoke)
        run: |
          sudo apt-get update
          sudo apt-get install -y metis
          gpmetis -h | head -n1 || true

      - name: Run smoke tests (allow KaHIP skip)
        env:
          OMP_NUM_THREADS: "1"
          OPENBLAS_NUM_THREADS: "1"
          MKL_NUM_THREADS: "1"
        run: poetry run pytest -q -k "smoke"
